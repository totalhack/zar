services:
  backend:
    image: "${DOCKER_IMAGE_BACKEND}:${TAG-latest}"
    ports:
      - "80:80"
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN}
      - SERVER_HOST=https://${DOMAIN}
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
      - SQLALCHEMY_SILENCE_UBER_WARNING=1
      - DEBUG=${DEBUG-false}
      - ROLLBAR_ENABLED=${ROLLBAR_ENABLED}
      - ROLLBAR_ENV=${ROLLBAR_ENV}
      - ROLLBAR_KEY=${ROLLBAR_KEY}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - KEEP_ALIVE=${KEEP_ALIVE-5}
      - REDIS_HOST=${REDIS_HOST-redis}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - NUMBER_POOL_ENABLED=${NUMBER_POOL_ENABLED-false}
      - NUMBER_POOL_KEY=${NUMBER_POOL_KEY}
      - SESSION_SOURCE_PARAM=${SESSION_SOURCE_PARAM}
      - USER_CONTEXT_ZIP_KEY=${USER_CONTEXT_ZIP_KEY}
      - POOL_CONTEXT_ZIP_KEY=${POOL_CONTEXT_ZIP_KEY}
      - CRITERIA_AREA_CODES_PATH=${CRITERIA_AREA_CODES_PATH}
      - LOC_PHYSICAL_URL_PARAM=${LOC_PHYSICAL_URL_PARAM}
      - LOC_INTEREST_URL_PARAM=${LOC_INTEREST_URL_PARAM}
      - BING_SOURCE_IDS=${BING_SOURCE_IDS}
    logging:
      driver: awslogs
      options:
        mode: non-blocking
        max-buffer-size: 4m
        awslogs-region: us-east-1
        awslogs-group: zar
        awslogs-create-group: "true"
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    deploy:
      replicas: ${ZAR_BACKEND_REPLICAS-1}

  redis:
    image: "redis:6.2.7-alpine"
    command: redis-server --bind 0.0.0.0 --port 6379 --requirepass ${REDIS_PASSWORD} --maxmemory 600mb --maxmemory-policy allkeys-lru --save "" --appendonly no
    ports:
      - "6379"
