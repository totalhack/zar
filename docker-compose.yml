version: "3.8"
services:
      
  backend:
    image: '${DOCKER_IMAGE_BACKEND}:${TAG-latest}'
    ports:
      - "80:80" 
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN}
      - SERVER_HOST=https://${DOMAIN}
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
      - DEBUG=${DEBUG-false}
      - ROLLBAR_ENABLED=${ROLLBAR_ENABLED}
      - ROLLBAR_ENV=${ROLLBAR_ENV}
      - ROLLBAR_KEY=${ROLLBAR_KEY}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - REDIS_HOST=${REDIS_HOST-redis}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - NUMBER_POOL_ENABLED=${NUMBER_POOL_ENABLED-false}
      - NUMBER_POOL_KEY=${NUMBER_POOL_KEY}
    logging:
      driver: awslogs
      options:
        mode: non-blocking
        max-buffer-size: 4m
        awslogs-region: us-east-1
        awslogs-group: zar
        awslogs-create-group: "true"
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}

  redis:
    image: "redis:alpine"
    command: redis-server --bind 0.0.0.0 --port 6379 --requirepass ${REDIS_PASSWORD} --maxmemory 128mb --maxmemory-policy allkeys-lru --save "" --appendonly no
    ports:
      - "6379"